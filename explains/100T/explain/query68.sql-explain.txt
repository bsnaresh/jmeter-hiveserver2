Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 3 (BROADCAST_EDGE)
Map 5 <- Map 11 (BROADCAST_EDGE), Map 3 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE), Reducer 10 (BROADCAST_EDGE), Reducer 12 (BROADCAST_EDGE), Reducer 2 (BROADCAST_EDGE), Reducer 4 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (CUSTOM_SIMPLE_EDGE)
Reducer 12 <- Map 11 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 4 <- Map 3 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Map 1 (BROADCAST_EDGE), Map 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 7 vectorized, llap
      File Output Operator [FS_205]
        Limit [LIM_204] (rows=100 width=398)
          Number of rows:100
          Select Operator [SEL_203] (rows=35070083 width=398)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 6 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_202]
              Select Operator [SEL_201] (rows=35070083 width=398)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                Filter Operator [FIL_200] (rows=35070083 width=398)
                  predicate:(_col5 <> _col8)
                  Map Join Operator [MAPJOIN_199] (rows=35070083 width=398)
                    Conds:RS_178._col0=SEL_198._col1(Inner),Output:["_col2","_col3","_col5","_col6","_col8","_col9","_col10","_col11"]
                  <-Map 1 [BROADCAST_EDGE] vectorized, llap
                    BROADCAST [RS_178]
                      PartitionCols:_col0
                      Map Join Operator [MAPJOIN_177] (rows=469 width=281)
                        Conds:SEL_176._col1=RS_148._col0(Inner),Output:["_col0","_col2","_col3","_col5"]
                      <-Map 3 [BROADCAST_EDGE] vectorized, llap
                        PARTITION_ONLY_SHUFFLE [RS_148]
                          PartitionCols:_col0
                          Select Operator [SEL_147] (rows=500 width=101)
                            Output:["_col0","_col1"]
                            Filter Operator [FIL_146] (rows=500 width=101)
                              predicate:ca_address_sk is not null
                              TableScan [TS_3] (rows=500 width=101)
                                tpcds_orc@customer_address,current_addr,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_city"]
                      <-Select Operator [SEL_176] (rows=1000 width=196)
                          Output:["_col0","_col1","_col2","_col3"]
                          Filter Operator [FIL_175] (rows=1000 width=196)
                            predicate:(c_customer_sk is not null and c_current_addr_sk is not null)
                            TableScan [TS_0] (rows=1000 width=196)
                              tpcds_orc@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_addr_sk","c_first_name","c_last_name"]
                  <-Select Operator [SEL_198] (rows=31480821 width=133)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                      Group By Operator [GBY_197] (rows=31480821 width=141)
                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)","sum(VALUE._col2)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                      <-Map 5 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_196]
                          PartitionCols:_col0, _col1, _col2, _col3
                          Group By Operator [GBY_195] (rows=31480821 width=141)
                            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"],aggregations:["sum(_col5)","sum(_col6)","sum(_col7)"],keys:_col0, _col2, _col4, _col18
                            Select Operator [SEL_194] (rows=31480821 width=141)
                              Output:["_col0","_col2","_col4","_col18","_col5","_col6","_col7"]
                              Map Join Operator [MAPJOIN_193] (rows=31480821 width=141)
                                Conds:MAPJOIN_192._col2=RS_151._col0(Inner),Output:["_col0","_col2","_col4","_col5","_col6","_col7","_col18"]
                              <-Map 3 [BROADCAST_EDGE] vectorized, llap
                                PARTITION_ONLY_SHUFFLE [RS_151]
                                  PartitionCols:_col0
                                  Select Operator [SEL_150] (rows=500 width=101)
                                    Output:["_col0","_col1"]
                                    Filter Operator [FIL_149] (rows=500 width=101)
                                      predicate:ca_address_sk is not null
                                       Please refer to the previous TableScan [TS_3]
                              <-Map Join Operator [MAPJOIN_192] (rows=101494168 width=48)
                                  Conds:MAPJOIN_191._col1=RS_169._col0(Inner),Output:["_col0","_col2","_col4","_col5","_col6","_col7"]
                                <-Map 11 [BROADCAST_EDGE] vectorized, llap
                                  PARTITION_ONLY_SHUFFLE [RS_169]
                                    PartitionCols:_col0
                                    Select Operator [SEL_168] (rows=1855 width=16)
                                      Output:["_col0"]
                                      Filter Operator [FIL_167] (rows=1855 width=16)
                                        predicate:(((hd_dep_count = 2) or (hd_vehicle_count = 1)) and hd_demo_sk is not null)
                                        TableScan [TS_15] (rows=7200 width=16)
                                          tpcds_orc@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                                <-Map Join Operator [MAPJOIN_191] (rows=393939605 width=56)
                                    Conds:MAPJOIN_190._col3=RS_163._col0(Inner),Output:["_col0","_col1","_col2","_col4","_col5","_col6","_col7"]
                                  <-Map 9 [BROADCAST_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_163]
                                      PartitionCols:_col0
                                      Select Operator [SEL_162] (rows=8 width=100)
                                        Output:["_col0"]
                                        Filter Operator [FIL_161] (rows=8 width=100)
                                          predicate:((s_city) IN ('cedar grove', 'wildwood') and s_store_sk is not null)
                                          TableScan [TS_12] (rows=1902 width=100)
                                            tpcds_orc@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_city"]
                                  <-Map Join Operator [MAPJOIN_190] (rows=93560606578 width=64)
                                      Conds:SEL_189._col8=RS_157._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                    <-Map 8 [BROADCAST_EDGE] vectorized, llap
                                      BROADCAST [RS_157]
                                        PartitionCols:_col0
                                        Select Operator [SEL_156] (rows=652 width=16)
                                          Output:["_col0"]
                                          Filter Operator [FIL_155] (rows=652 width=16)
                                            predicate:((d_year) IN (1998, 1999, 2000) and d_dom BETWEEN 1 AND 2 and d_date_sk is not null)
                                            TableScan [TS_9] (rows=73049 width=16)
                                              tpcds_orc@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_dom"]
                                      Dynamic Partitioning Event Operator [EVENT_160] (rows=326 width=16)
                                        Group By Operator [GBY_159] (rows=326 width=16)
                                          Output:["_col0"],keys:_col0
                                          Select Operator [SEL_158] (rows=652 width=16)
                                            Output:["_col0"]
                                             Please refer to the previous Select Operator [SEL_156]
                                    <-Select Operator [SEL_189] (rows=262030684989 width=71)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7","_col8"]
                                        Filter Operator [FIL_188] (rows=262030684989 width=71)
                                          predicate:(ss_store_sk is not null and ss_hdemo_sk is not null and ss_addr_sk is not null and ss_customer_sk is not null and (ss_store_sk BETWEEN DynamicValue(RS_25_store_s_store_sk_min) AND DynamicValue(RS_25_store_s_store_sk_max) and in_bloom_filter(ss_store_sk, DynamicValue(RS_25_store_s_store_sk_bloom_filter))) and (ss_hdemo_sk BETWEEN DynamicValue(RS_28_household_demographics_hd_demo_sk_min) AND DynamicValue(RS_28_household_demographics_hd_demo_sk_max) and in_bloom_filter(ss_hdemo_sk, DynamicValue(RS_28_household_demographics_hd_demo_sk_bloom_filter))) and (ss_addr_sk BETWEEN DynamicValue(RS_31_customer_address_ca_address_sk_min) AND DynamicValue(RS_31_customer_address_ca_address_sk_max) and in_bloom_filter(ss_addr_sk, DynamicValue(RS_31_customer_address_ca_address_sk_bloom_filter))) and (ss_customer_sk BETWEEN DynamicValue(RS_42_customer_c_customer_sk_min) AND DynamicValue(RS_42_customer_c_customer_sk_max) and in_bloom_filter(ss_customer_sk, DynamicValue(RS_42_customer_c_customer_sk_bloom_filter))))
                                          TableScan [TS_6] (rows=275035746821 width=71)
                                            tpcds_orc@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_customer_sk","ss_hdemo_sk","ss_addr_sk","ss_store_sk","ss_ticket_number","ss_ext_sales_price","ss_ext_list_price","ss_ext_tax"]
                                          <-Reducer 10 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_187]
                                              Group By Operator [GBY_186] (rows=1 width=24)
                                                Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                          <-Reducer 12 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_174]
                                              Group By Operator [GBY_173] (rows=1 width=24)
                                                Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                          <-Reducer 2 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_183]
                                              Group By Operator [GBY_182] (rows=1 width=24)
                                                Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                          <-Reducer 4 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_185]
                                              Group By Operator [GBY_184] (rows=1 width=24)
                                                Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]