Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE), Reducer 8 (BROADCAST_EDGE)
Map 21 <- Reducer 2 (BROADCAST_EDGE), Reducer 3 (BROADCAST_EDGE)
Map 9 <- Reducer 2 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (CUSTOM_SIMPLE_EDGE), Reducer 18 (CUSTOM_SIMPLE_EDGE)
Reducer 11 <- Map 1 (BROADCAST_EDGE), Reducer 10 (SIMPLE_EDGE)
Reducer 12 <- Reducer 11 (SIMPLE_EDGE)
Reducer 13 <- Reducer 12 (SIMPLE_EDGE)
Reducer 15 <- Map 14 (XPROD_EDGE), Map 19 (XPROD_EDGE)
Reducer 16 <- Map 20 (XPROD_EDGE), Reducer 15 (XPROD_EDGE)
Reducer 17 <- Map 21 (XPROD_EDGE), Reducer 16 (XPROD_EDGE)
Reducer 18 <- Reducer 17 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Map 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 13 vectorized, llap
      File Output Operator [FS_254]
        Limit [LIM_253] (rows=1 width=24)
          Number of rows:100
          Select Operator [SEL_252] (rows=1 width=24)
            Output:["_col0","_col1","_col2"]
          <-Reducer 12 [SIMPLE_EDGE] llap
            SHUFFLE [RS_74]
              Group By Operator [GBY_72] (rows=1 width=24)
                Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT KEY._col0:0._col0)","sum(VALUE._col1)","sum(VALUE._col2)"]
              <-Reducer 11 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_251]
                  Group By Operator [GBY_250] (rows=1 width=32)
                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(DISTINCT _col4)","sum(_col5)","sum(_col6)"],keys:_col4
                    Select Operator [SEL_249] (rows=1 width=28)
                      Output:["_col4","_col5","_col6"]
                      Filter Operator [FIL_248] (rows=1 width=28)
                        predicate:_col16 is null
                        Select Operator [SEL_247] (rows=10327 width=28)
                          Output:["_col4","_col5","_col6","_col16"]
                          Map Join Operator [MAPJOIN_246] (rows=10327 width=28)
                            Conds:RS_213._col3, _col4=GBY_245._col0, _col1(Inner),Output:["_col4","_col5","_col6","_col14"]
                          <-Map 1 [BROADCAST_EDGE] vectorized, llap
                            PARTITION_ONLY_SHUFFLE [RS_213]
                              PartitionCols:_col3, _col4
                              Map Join Operator [MAPJOIN_212] (rows=10327 width=36)
                                Conds:MAPJOIN_211._col4=RS_206._col0(Left Outer),Output:["_col3","_col4","_col5","_col6","_col14"]
                              <-Reducer 8 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_206]
                                  PartitionCols:_col0
                                  Select Operator [SEL_205] (rows=8732771 width=12)
                                    Output:["_col0","_col1"]
                                    Group By Operator [GBY_204] (rows=8732771 width=8)
                                      Output:["_col0"],keys:KEY._col0
                                    <-Map 7 [SIMPLE_EDGE] vectorized, llap
                                      SHUFFLE [RS_203]
                                        PartitionCols:_col0
                                        Group By Operator [GBY_202] (rows=3600842370 width=8)
                                          Output:["_col0"],keys:cr_order_number
                                          Filter Operator [FIL_201] (rows=7201684741 width=8)
                                            predicate:(cr_order_number = cr_order_number)
                                            TableScan [TS_12] (rows=14403369483 width=8)
                                              tpcds_orc@catalog_returns,cr1,Tbl:COMPLETE,Col:COMPLETE,Output:["cr_order_number"]
                              <-Map Join Operator [MAPJOIN_211] (rows=10327 width=32)
                                  Conds:MAPJOIN_210._col2=RS_200._col0(Inner),Output:["_col3","_col4","_col5","_col6"]
                                <-Map 6 [BROADCAST_EDGE] vectorized, llap
                                  BROADCAST [RS_200]
                                    PartitionCols:_col0
                                    Select Operator [SEL_199] (rows=10 width=106)
                                      Output:["_col0"]
                                      Filter Operator [FIL_198] (rows=10 width=106)
                                        predicate:((cc_county) IN ('ziebach county', 'levy county', 'huron county', 'franklin parish', 'daviess county') and cc_call_center_sk is not null)
                                        TableScan [TS_9] (rows=60 width=106)
                                          tpcds_orc@call_center,call_center,Tbl:COMPLETE,Col:COMPLETE,Output:["cc_call_center_sk","cc_county"]
                                <-Map Join Operator [MAPJOIN_210] (rows=60911 width=40)
                                    Conds:MAPJOIN_209._col1=RS_197._col0(Inner),Output:["_col2","_col3","_col4","_col5","_col6"]
                                  <-Map 5 [BROADCAST_EDGE] vectorized, llap
                                    BROADCAST [RS_197]
                                      PartitionCols:_col0
                                      Select Operator [SEL_196] (rows=10 width=94)
                                        Output:["_col0"]
                                        Filter Operator [FIL_195] (rows=10 width=94)
                                          predicate:((ca_state = 'ny') and ca_address_sk is not null)
                                          TableScan [TS_6] (rows=500 width=94)
                                            tpcds_orc@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]
                                  <-Map Join Operator [MAPJOIN_209] (rows=15946339904 width=48)
                                      Conds:SEL_208._col0=RS_194._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col6"]
                                    <-Map 4 [BROADCAST_EDGE] vectorized, llap
                                      BROADCAST [RS_194]
                                        PartitionCols:_col0
                                        Select Operator [SEL_193] (rows=8116 width=102)
                                          Output:["_col0"]
                                          Filter Operator [FIL_192] (rows=8116 width=102)
                                            predicate:(CAST( d_date AS TIMESTAMP) BETWEEN 2001-04-01 00:00:00.0 AND 2001-05-31 00:00:00.0 and d_date_sk is not null)
                                            TableScan [TS_3] (rows=73049 width=102)
                                              tpcds_orc@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                                    <-Select Operator [SEL_208] (rows=143526884399 width=55)
                                        Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                        Filter Operator [FIL_207] (rows=143526884399 width=55)
                                          predicate:(cs_ship_date_sk is not null and cs_ship_addr_sk is not null and cs_call_center_sk is not null)
                                          TableScan [TS_0] (rows=144071691379 width=55)
                                            tpcds_orc@catalog_sales,cs1,Tbl:COMPLETE,Col:PARTIAL,Output:["cs_ship_date_sk","cs_ship_addr_sk","cs_call_center_sk","cs_warehouse_sk","cs_order_number","cs_ext_ship_cost","cs_net_profit"]
                          <-Group By Operator [GBY_245] (rows=705499631 width=16)
                              Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                            <-Reducer 10 [SIMPLE_EDGE] vectorized, llap
                              SHUFFLE [RS_244]
                                PartitionCols:_col0, _col1
                                Group By Operator [GBY_243] (rows=3313648901717 width=16)
                                  Output:["_col0","_col1"],keys:_col2, _col3
                                  Select Operator [SEL_242] (rows=3313648901717 width=24)
                                    Output:["_col2","_col3"]
                                    Filter Operator [FIL_241] (rows=3313648901717 width=24)
                                      predicate:(_col2 <> _col0)
                                      Map Join Operator [MAPJOIN_240] (rows=3313648901717 width=24)
                                        Conds:RS_225.KEY.reducesinkkey0=RS_239.KEY.reducesinkkey0(Inner),Output:["_col0","_col2","_col3"]
                                      <-Reducer 18 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_239]
                                          PartitionCols:_col1
                                          Select Operator [SEL_238] (rows=705499631 width=16)
                                            Output:["_col0","_col1"]
                                            Group By Operator [GBY_237] (rows=705499631 width=16)
                                              Output:["_col0","_col1"],keys:KEY._col0, KEY._col1
                                            <-Reducer 17 [SIMPLE_EDGE] llap
                                              SHUFFLE [RS_40]
                                                PartitionCols:_col0, _col1
                                                Group By Operator [GBY_39] (rows=9223372036854775807 width=1)
                                                  Output:["_col0","_col1"],keys:_col4, _col3
                                                  Select Operator [SEL_38] (rows=9223372036854775807 width=1)
                                                    Output:["_col4","_col3"]
                                                    Merge Join Operator [MERGEJOIN_182] (rows=9223372036854775807 width=1)
                                                      Conds:(Inner),Output:["_col3","_col4"]
                                                    <-Map 21 [XPROD_EDGE] vectorized, llap
                                                      XPROD_EDGE [RS_236]
                                                        Select Operator [SEL_235] (rows=144071691379 width=15)
                                                          Output:["_col0","_col1"]
                                                          Filter Operator [FIL_234] (rows=144071691379 width=15)
                                                            predicate:((cs_warehouse_sk BETWEEN DynamicValue(RS_64_cs1_cs_warehouse_sk_min) AND DynamicValue(RS_64_cs1_cs_warehouse_sk_max) and in_bloom_filter(cs_warehouse_sk, DynamicValue(RS_64_cs1_cs_warehouse_sk_bloom_filter))) and (cs_order_number BETWEEN DynamicValue(RS_64_cs1_cs_order_number_min) AND DynamicValue(RS_64_cs1_cs_order_number_max) and in_bloom_filter(cs_order_number, DynamicValue(RS_64_cs1_cs_order_number_bloom_filter))))
                                                            TableScan [TS_27] (rows=144071691379 width=15)
                                                              tpcds_orc@catalog_sales,cs1,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_warehouse_sk","cs_order_number"]
                                                            <-Reducer 2 [BROADCAST_EDGE] vectorized, llap
                                                              BROADCAST [RS_222]
                                                                Group By Operator [GBY_220] (rows=1 width=24)
                                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                            <-Reducer 3 [BROADCAST_EDGE] vectorized, llap
                                                              BROADCAST [RS_233]
                                                                Group By Operator [GBY_232] (rows=1 width=24)
                                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                                    <-Reducer 16 [XPROD_EDGE] llap
                                                      XPROD_EDGE [RS_35]
                                                        Merge Join Operator [MERGEJOIN_178] (rows=2191470000 width=8)
                                                          Conds:(Inner)
                                                        <-Map 20 [XPROD_EDGE] vectorized, llap
                                                          XPROD_EDGE [RS_231]
                                                            Select Operator [SEL_230] (rows=73049 width=4)
                                                              TableScan [TS_25] (rows=73049 width=1123)
                                                                tpcds_orc@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE
                                                        <-Reducer 15 [XPROD_EDGE] llap
                                                          XPROD_EDGE [RS_32]
                                                            Merge Join Operator [MERGEJOIN_177] (rows=30000 width=8)
                                                              Conds:(Inner)
                                                            <-Map 14 [XPROD_EDGE] vectorized, llap
                                                              XPROD_EDGE [RS_227]
                                                                Select Operator [SEL_226] (rows=500 width=4)
                                                                  TableScan [TS_21] (rows=500 width=1022)
                                                                    tpcds_orc@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE
                                                            <-Map 19 [XPROD_EDGE] vectorized, llap
                                                              XPROD_EDGE [RS_229]
                                                                Select Operator [SEL_228] (rows=60 width=4)
                                                                  TableScan [TS_23] (rows=60 width=2061)
                                                                    tpcds_orc@call_center,call_center,Tbl:COMPLETE,Col:COMPLETE
                                      <-Map 9 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                        PARTITION_ONLY_SHUFFLE [RS_225]
                                          PartitionCols:_col1
                                          Select Operator [SEL_224] (rows=144071691379 width=15)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_223] (rows=144071691379 width=15)
                                              predicate:(cs_order_number BETWEEN DynamicValue(RS_64_cs1_cs_order_number_min) AND DynamicValue(RS_64_cs1_cs_order_number_max) and in_bloom_filter(cs_order_number, DynamicValue(RS_64_cs1_cs_order_number_bloom_filter)))
                                              TableScan [TS_19] (rows=144071691379 width=15)
                                                tpcds_orc@catalog_sales,cs2,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_warehouse_sk","cs_order_number"]
                                              <-Reducer 2 [BROADCAST_EDGE] vectorized, llap
                                                BROADCAST [RS_221]
                                                   Please refer to the previous Group By Operator [GBY_220]