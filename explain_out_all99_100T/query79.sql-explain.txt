Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE), Reducer 10 (BROADCAST_EDGE), Reducer 6 (BROADCAST_EDGE), Reducer 8 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (BROADCAST_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 6 <- Map 5 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Map 7 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 3 vectorized, llap
      File Output Operator [FS_143]
        Limit [LIM_142] (rows=100 width=388)
          Number of rows:100
          Select Operator [SEL_141] (rows=74901756 width=388)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
          <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_140]
              Select Operator [SEL_139] (rows=74901756 width=388)
                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                Map Join Operator [MAPJOIN_138] (rows=74901756 width=296)
                  Conds:SEL_137._col1=RS_120._col0(Inner),Output:["_col0","_col2","_col3","_col4","_col6","_col7"]
                <-Map 9 [BROADCAST_EDGE] vectorized, llap
                  BROADCAST [RS_120]
                    PartitionCols:_col0
                    Select Operator [SEL_119] (rows=1000 width=188)
                      Output:["_col0","_col1","_col2"]
                      Filter Operator [FIL_118] (rows=1000 width=188)
                        predicate:c_customer_sk is not null
                        TableScan [TS_27] (rows=1000 width=188)
                          tpcds_orc@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_first_name","c_last_name"]
                <-Select Operator [SEL_137] (rows=1006005485 width=124)
                    Output:["_col0","_col1","_col2","_col3","_col4"]
                    Group By Operator [GBY_136] (rows=1006005485 width=132)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3
                    <-Map 1 [SIMPLE_EDGE] vectorized, llap
                      SHUFFLE [RS_135]
                        PartitionCols:_col0, _col1, _col2, _col3
                        Group By Operator [GBY_134] (rows=1006005485 width=132)
                          Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["sum(_col5)","sum(_col6)"],keys:_col0, _col2, _col4, _col13
                          Select Operator [SEL_133] (rows=1006005485 width=132)
                            Output:["_col0","_col2","_col4","_col13","_col5","_col6"]
                            Map Join Operator [MAPJOIN_132] (rows=1006005485 width=132)
                              Conds:MAPJOIN_131._col1=RS_112._col0(Inner),Output:["_col0","_col2","_col4","_col5","_col6","_col13"]
                            <-Map 7 [BROADCAST_EDGE] vectorized, llap
                              PARTITION_ONLY_SHUFFLE [RS_112]
                                PartitionCols:_col0
                                Select Operator [SEL_111] (rows=3055 width=16)
                                  Output:["_col0"]
                                  Filter Operator [FIL_110] (rows=3055 width=16)
                                    predicate:(((hd_dep_count = 8) or (hd_vehicle_count > 0)) and hd_demo_sk is not null)
                                    TableScan [TS_9] (rows=7200 width=16)
                                      tpcds_orc@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_dep_count","hd_vehicle_count"]
                            <-Map Join Operator [MAPJOIN_131] (rows=2370945808 width=140)
                                Conds:MAPJOIN_130._col3=RS_106._col0(Inner),Output:["_col0","_col1","_col2","_col4","_col5","_col6","_col13"]
                              <-Map 5 [BROADCAST_EDGE] vectorized, llap
                                PARTITION_ONLY_SHUFFLE [RS_106]
                                  PartitionCols:_col0
                                  Select Operator [SEL_105] (rows=634 width=103)
                                    Output:["_col0","_col2"]
                                    Filter Operator [FIL_104] (rows=634 width=103)
                                      predicate:(s_number_employees BETWEEN 200 AND 295 and s_store_sk is not null)
                                      TableScan [TS_6] (rows=1902 width=103)
                                        tpcds_orc@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_number_employees","s_city"]
                              <-Map Join Operator [MAPJOIN_130] (rows=7105353753 width=56)
                                  Conds:SEL_129._col7=RS_100._col0(Inner),Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6"]
                                <-Map 4 [BROADCAST_EDGE] vectorized, llap
                                  BROADCAST [RS_100]
                                    PartitionCols:_col0
                                    Select Operator [SEL_99] (rows=1957 width=16)
                                      Output:["_col0"]
                                      Filter Operator [FIL_98] (rows=1957 width=16)
                                        predicate:((d_year) IN (1998, 1999, 2000) and (d_dow = 1) and d_date_sk is not null)
                                        TableScan [TS_3] (rows=73049 width=16)
                                          tpcds_orc@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_dow"]
                                  Dynamic Partitioning Event Operator [EVENT_103] (rows=978 width=16)
                                    Group By Operator [GBY_102] (rows=978 width=16)
                                      Output:["_col0"],keys:_col0
                                      Select Operator [SEL_101] (rows=1957 width=16)
                                        Output:["_col0"]
                                         Please refer to the previous Select Operator [SEL_99]
                                <-Select Operator [SEL_129] (rows=265221757409 width=63)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
                                    Filter Operator [FIL_128] (rows=265221757409 width=63)
                                      predicate:(ss_store_sk is not null and ss_hdemo_sk is not null and ss_customer_sk is not null and (ss_store_sk BETWEEN DynamicValue(RS_16_store_s_store_sk_min) AND DynamicValue(RS_16_store_s_store_sk_max) and in_bloom_filter(ss_store_sk, DynamicValue(RS_16_store_s_store_sk_bloom_filter))) and (ss_hdemo_sk BETWEEN DynamicValue(RS_19_household_demographics_hd_demo_sk_min) AND DynamicValue(RS_19_household_demographics_hd_demo_sk_max) and in_bloom_filter(ss_hdemo_sk, DynamicValue(RS_19_household_demographics_hd_demo_sk_bloom_filter))) and (ss_customer_sk BETWEEN DynamicValue(RS_31_customer_c_customer_sk_min) AND DynamicValue(RS_31_customer_c_customer_sk_max) and in_bloom_filter(ss_customer_sk, DynamicValue(RS_31_customer_c_customer_sk_bloom_filter))))
                                      TableScan [TS_0] (rows=275035746821 width=63)
                                        tpcds_orc@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_customer_sk","ss_hdemo_sk","ss_addr_sk","ss_store_sk","ss_ticket_number","ss_coupon_amt","ss_net_profit"]
                                      <-Reducer 10 [BROADCAST_EDGE] vectorized, llap
                                        BROADCAST [RS_125]
                                          Group By Operator [GBY_124] (rows=1 width=24)
                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                      <-Reducer 6 [BROADCAST_EDGE] vectorized, llap
                                        BROADCAST [RS_127]
                                          Group By Operator [GBY_126] (rows=1 width=24)
                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                      <-Reducer 8 [BROADCAST_EDGE] vectorized, llap
                                        BROADCAST [RS_117]
                                          Group By Operator [GBY_116] (rows=1 width=24)
                                            Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]