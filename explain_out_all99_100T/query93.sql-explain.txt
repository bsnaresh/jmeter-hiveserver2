Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE)
Map 5 <- Reducer 2 (BROADCAST_EDGE), Reducer 3 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 3 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 6 <- Map 1 (CUSTOM_SIMPLE_EDGE), Map 5 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8 vectorized, llap
      File Output Operator [FS_95]
        Limit [LIM_94] (rows=100 width=16)
          Number of rows:100
          Select Operator [SEL_93] (rows=100 width=16)
            Output:["_col0","_col1"]
          <-Reducer 7 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_92]
              Group By Operator [GBY_91] (rows=100 width=16)
                Output:["_col0","_col1"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0
              <-Reducer 6 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_90]
                  PartitionCols:_col0
                  Group By Operator [GBY_89] (rows=300 width=16)
                    Output:["_col0","_col1"],aggregations:["sum(_col1)"],keys:_col0
                    Select Operator [SEL_88] (rows=7786025 width=24)
                      Output:["_col0","_col1"]
                      Map Join Operator [MAPJOIN_87] (rows=7786025 width=24)
                        Conds:RS_73.KEY.reducesinkkey0, KEY.reducesinkkey1=RS_86.KEY.reducesinkkey0, KEY.reducesinkkey1(Inner),Output:["_col3","_col7","_col9","_col10"]
                      <-Map 1 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                        PARTITION_ONLY_SHUFFLE [RS_73]
                          PartitionCols:_col0, _col2
                          Map Join Operator [MAPJOIN_72] (rows=380572960 width=20)
                            Conds:SEL_71._col1=RS_69._col0(Inner),Output:["_col0","_col2","_col3"]
                          <-Map 4 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_69]
                              PartitionCols:_col0
                              Select Operator [SEL_68] (rows=1 width=117)
                                Output:["_col0"]
                                Filter Operator [FIL_67] (rows=1 width=105)
                                  predicate:((r_reason_desc = 'did not like the warranty') and r_reason_sk is not null)
                                  TableScan [TS_3] (rows=75 width=105)
                                    tpcds_orc@reason,reason,Tbl:COMPLETE,Col:COMPLETE,Output:["r_reason_sk","r_reason_desc"]
                          <-Select Operator [SEL_71] (rows=28542971256 width=27)
                              Output:["_col0","_col1","_col2","_col3"]
                              Filter Operator [FIL_70] (rows=28542971256 width=27)
                                predicate:(sr_reason_sk is not null and sr_item_sk is not null and sr_ticket_number is not null)
                                TableScan [TS_0] (rows=28777641316 width=27)
                                  tpcds_orc@store_returns,store_returns,Tbl:COMPLETE,Col:PARTIAL,Output:["sr_item_sk","sr_reason_sk","sr_ticket_number","sr_return_quantity"]
                      <-Map 5 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                        PARTITION_ONLY_SHUFFLE [RS_86]
                          PartitionCols:_col0, _col2
                          Select Operator [SEL_85] (rows=288018711538 width=35)
                            Output:["_col0","_col1","_col2","_col3","_col4"]
                            Filter Operator [FIL_84] (rows=288018711538 width=35)
                              predicate:(ss_item_sk is not null and ss_ticket_number is not null and (ss_item_sk BETWEEN DynamicValue(RS_12_store_returns_sr_item_sk_min) AND DynamicValue(RS_12_store_returns_sr_item_sk_max) and in_bloom_filter(ss_item_sk, DynamicValue(RS_12_store_returns_sr_item_sk_bloom_filter))) and (ss_ticket_number BETWEEN DynamicValue(RS_12_store_returns_sr_ticket_number_min) AND DynamicValue(RS_12_store_returns_sr_ticket_number_max) and in_bloom_filter(ss_ticket_number, DynamicValue(RS_12_store_returns_sr_ticket_number_bloom_filter))))
                              TableScan [TS_6] (rows=288018711538 width=35)
                                tpcds_orc@store_sales,store_sales,Tbl:COMPLETE,Col:PARTIAL,Output:["ss_item_sk","ss_customer_sk","ss_ticket_number","ss_quantity","ss_sales_price"]
                              <-Reducer 2 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_81]
                                  Group By Operator [GBY_80] (rows=1 width=24)
                                    Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                              <-Reducer 3 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_83]
                                  Group By Operator [GBY_82] (rows=1 width=24)
                                    Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1052128)"]