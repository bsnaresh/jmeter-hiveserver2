Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 5 (BROADCAST_EDGE), Map 6 (BROADCAST_EDGE), Map 8 (BROADCAST_EDGE), Reducer 7 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 3 (SIMPLE_EDGE)
Reducer 7 <- Map 6 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 4 vectorized, llap
      File Output Operator [FS_100]
        Limit [LIM_99] (rows=100 width=198)
          Number of rows:100
          Select Operator [SEL_98] (rows=3060 width=198)
            Output:["_col0","_col1","_col2","_col3","_col4"]
          <-Reducer 3 [SIMPLE_EDGE] llap
            SHUFFLE [RS_32]
              Select Operator [SEL_30] (rows=3060 width=198)
                Output:["_col0","_col1","_col2","_col3","_col4"]
                PTF Operator [PTF_29] (rows=3060 width=384)
                  Function definitions:[{},{"name:":"windowingtablefunction","order by:":"(_col4 / _col5) ASC NULLS FIRST","partition by:":"(grouping(_col6, 1) + grouping(_col6, 0)), CASE WHEN ((UDFToInteger(grouping(_col6, 0)) = 0)) THEN (_col0) ELSE (null) END"}]
                  Select Operator [SEL_28] (rows=3060 width=384)
                    Output:["_col0","_col1","_col4","_col5","_col6"]
                  <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
                    SHUFFLE [RS_97]
                      PartitionCols:(grouping(_col6, 1) + grouping(_col6, 0)), CASE WHEN ((UDFToInteger(grouping(_col6, 0)) = 0)) THEN (_col0) ELSE (null) END
                      Select Operator [SEL_96] (rows=3060 width=384)
                        Output:["_col0","_col1","_col4","_col5","_col6"]
                        Group By Operator [GBY_95] (rows=3060 width=202)
                          Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1, KEY._col2
                        <-Map 1 [SIMPLE_EDGE] llap
                          SHUFFLE [RS_24]
                            PartitionCols:_col0, _col1, _col2
                            Group By Operator [GBY_23] (rows=137390940 width=202)
                              Output:["_col0","_col1","_col2","_col3","_col4"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col0, _col1, 0
                              Select Operator [SEL_21] (rows=15217456398 width=198)
                                Output:["_col0","_col1","_col2","_col3"]
                                Map Join Operator [MAPJOIN_74] (rows=15217456398 width=198)
                                  Conds:MAPJOIN_73._col0=RS_92._col0(Inner),Output:["_col2","_col3","_col10","_col11"]
                                <-Map 8 [BROADCAST_EDGE] vectorized, llap
                                  BROADCAST [RS_92]
                                    PartitionCols:_col0
                                    Select Operator [SEL_91] (rows=502000 width=190)
                                      Output:["_col0","_col1","_col2"]
                                      Filter Operator [FIL_90] (rows=502000 width=190)
                                        predicate:i_item_sk is not null
                                        TableScan [TS_9] (rows=502000 width=190)
                                          tpcds_orc@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_class","i_category"]
                                <-Map Join Operator [MAPJOIN_73] (rows=15217456398 width=24)
                                    Conds:MAPJOIN_72._col1=RS_86._col0(Inner),Output:["_col0","_col2","_col3"]
                                  <-Map 6 [BROADCAST_EDGE] vectorized, llap
                                    PARTITION_ONLY_SHUFFLE [RS_86]
                                      PartitionCols:_col0
                                      Select Operator [SEL_85] (rows=298 width=94)
                                        Output:["_col0"]
                                        Filter Operator [FIL_84] (rows=298 width=94)
                                          predicate:((s_state) IN ('sd', 'fl', 'mi', 'la', 'mo', 'sc', 'al', 'ga') and s_store_sk is not null)
                                          TableScan [TS_6] (rows=1902 width=94)
                                            tpcds_orc@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_state"]
                                  <-Map Join Operator [MAPJOIN_72] (rows=97023991564 width=32)
                                      Conds:SEL_2._col4=RS_80._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                                    <-Map 5 [BROADCAST_EDGE] vectorized, llap
                                      BROADCAST [RS_80]
                                        PartitionCols:_col0
                                        Select Operator [SEL_79] (rows=652 width=12)
                                          Output:["_col0"]
                                          Filter Operator [FIL_78] (rows=652 width=12)
                                            predicate:((d_year = 1999) and d_date_sk is not null)
                                            TableScan [TS_3] (rows=73049 width=12)
                                              tpcds_orc@date_dim,d1,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year"]
                                      Dynamic Partitioning Event Operator [EVENT_83] (rows=326 width=12)
                                        Group By Operator [GBY_82] (rows=326 width=12)
                                          Output:["_col0"],keys:_col0
                                          Select Operator [SEL_81] (rows=652 width=12)
                                            Output:["_col0"]
                                             Please refer to the previous Select Operator [SEL_79]
                                    <-Select Operator [SEL_2] (rows=271730420523 width=39)
                                        Output:["_col0","_col1","_col2","_col3","_col4"]
                                        Filter Operator [FIL_45] (rows=271730420523 width=39)
                                          predicate:(ss_item_sk is not null and ss_store_sk is not null and (ss_store_sk BETWEEN DynamicValue(RS_16_store_s_store_sk_min) AND DynamicValue(RS_16_store_s_store_sk_max) and in_bloom_filter(ss_store_sk, DynamicValue(RS_16_store_s_store_sk_bloom_filter))))
                                          TableScan [TS_0] (rows=275035746821 width=39)
                                            tpcds_orc@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_item_sk","ss_store_sk","ss_ext_sales_price","ss_net_profit"]
                                          <-Reducer 7 [BROADCAST_EDGE] vectorized, llap
                                            BROADCAST [RS_94]
                                              Group By Operator [GBY_93] (rows=1 width=24)
                                                Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]