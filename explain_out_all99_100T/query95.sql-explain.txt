Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 3 (BROADCAST_EDGE), Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE)
Map 10 <- Reducer 2 (BROADCAST_EDGE)
Map 11 <- Reducer 19 (BROADCAST_EDGE), Reducer 9 (BROADCAST_EDGE)
Map 17 <- Reducer 19 (BROADCAST_EDGE), Reducer 9 (BROADCAST_EDGE)
Map 18 <- Reducer 9 (BROADCAST_EDGE)
Map 6 <- Reducer 2 (BROADCAST_EDGE)
Reducer 12 <- Map 11 (CUSTOM_SIMPLE_EDGE), Map 17 (CUSTOM_SIMPLE_EDGE)
Reducer 13 <- Map 18 (CUSTOM_SIMPLE_EDGE), Reducer 12 (CUSTOM_SIMPLE_EDGE)
Reducer 14 <- Reducer 13 (SIMPLE_EDGE), Reducer 8 (BROADCAST_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE)
Reducer 16 <- Reducer 15 (SIMPLE_EDGE)
Reducer 19 <- Map 18 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 7 <- Map 10 (CUSTOM_SIMPLE_EDGE), Map 6 (CUSTOM_SIMPLE_EDGE)
Reducer 8 <- Map 1 (BROADCAST_EDGE), Reducer 7 (SIMPLE_EDGE)
Reducer 9 <- Reducer 8 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 16 vectorized, llap
      File Output Operator [FS_285]
        Limit [LIM_284] (rows=1 width=24)
          Number of rows:100
          Select Operator [SEL_283] (rows=1 width=24)
            Output:["_col0","_col1","_col2"]
          <-Reducer 15 [SIMPLE_EDGE] llap
            SHUFFLE [RS_69]
              Group By Operator [GBY_67] (rows=1 width=24)
                Output:["_col0","_col1","_col2"],aggregations:["count(DISTINCT KEY._col0:0._col0)","sum(VALUE._col1)","sum(VALUE._col2)"]
              <-Reducer 14 [SIMPLE_EDGE] vectorized, llap
                SHUFFLE [RS_282]
                  Group By Operator [GBY_281] (rows=5 width=32)
                    Output:["_col0","_col1","_col2","_col3"],aggregations:["count(DISTINCT _col3)","sum(_col4)","sum(_col5)"],keys:_col3
                    Map Join Operator [MAPJOIN_280] (rows=28893 width=24)
                      Conds:RS_249._col3=GBY_279._col0(Inner),Output:["_col3","_col4","_col5"]
                    <-Reducer 8 [BROADCAST_EDGE] vectorized, llap
                      PARTITION_ONLY_SHUFFLE [RS_249]
                        PartitionCols:_col3
                        Map Join Operator [MAPJOIN_248] (rows=28893 width=24)
                          Conds:RS_229._col3=GBY_247._col0(Inner),Output:["_col3","_col4","_col5"]
                        <-Map 1 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_229]
                            PartitionCols:_col3
                            Map Join Operator [MAPJOIN_228] (rows=28893 width=24)
                              Conds:MAPJOIN_227._col2=RS_223._col0(Inner),Output:["_col3","_col4","_col5"]
                            <-Map 5 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_223]
                                PartitionCols:_col0
                                Select Operator [SEL_222] (rows=14 width=95)
                                  Output:["_col0"]
                                  Filter Operator [FIL_221] (rows=14 width=96)
                                    predicate:((web_company_name = 'pri') and web_site_sk is not null)
                                    TableScan [TS_9] (rows=96 width=96)
                                      tpcds_orc@web_site,web_site,Tbl:COMPLETE,Col:COMPLETE,Output:["web_site_sk","web_company_name"]
                            <-Map Join Operator [MAPJOIN_227] (rows=196035 width=32)
                                Conds:MAPJOIN_226._col1=RS_220._col0(Inner),Output:["_col2","_col3","_col4","_col5"]
                              <-Map 4 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_220]
                                  PartitionCols:_col0
                                  Select Operator [SEL_219] (rows=10 width=94)
                                    Output:["_col0"]
                                    Filter Operator [FIL_218] (rows=10 width=94)
                                      predicate:((ca_state = 'tx') and ca_address_sk is not null)
                                      TableScan [TS_6] (rows=500 width=94)
                                        tpcds_orc@customer_address,customer_address,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]
                              <-Map Join Operator [MAPJOIN_226] (rows=7995491161 width=40)
                                  Conds:SEL_225._col0=RS_217._col0(Inner),Output:["_col1","_col2","_col3","_col4","_col5"]
                                <-Map 3 [BROADCAST_EDGE] vectorized, llap
                                  BROADCAST [RS_217]
                                    PartitionCols:_col0
                                    Select Operator [SEL_216] (rows=8116 width=102)
                                      Output:["_col0"]
                                      Filter Operator [FIL_215] (rows=8116 width=102)
                                        predicate:(CAST( d_date AS TIMESTAMP) BETWEEN 1999-05-01 00:00:00.0 AND 1999-06-30 00:00:00.0 and d_date_sk is not null)
                                        TableScan [TS_3] (rows=73049 width=102)
                                          tpcds_orc@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                                <-Select Operator [SEL_225] (rows=71964346834 width=47)
                                    Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                    Filter Operator [FIL_224] (rows=71964346834 width=47)
                                      predicate:(ws_order_number is not null and ws_ship_date_sk is not null and ws_ship_addr_sk is not null and ws_web_site_sk is not null)
                                      TableScan [TS_0] (rows=71977978409 width=47)
                                        tpcds_orc@web_sales,ws1,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_ship_date_sk","ws_ship_addr_sk","ws_web_site_sk","ws_order_number","ws_ext_ship_cost","ws_net_profit"]
                        <-Group By Operator [GBY_247] (rows=11826404 width=8)
                            Output:["_col0"],keys:KEY._col0
                          <-Reducer 7 [SIMPLE_EDGE] vectorized, llap
                            SHUFFLE [RS_246]
                              PartitionCols:_col0
                              Group By Operator [GBY_245] (rows=219036546351979 width=8)
                                Output:["_col0"],keys:_col1
                                Select Operator [SEL_244] (rows=438073092703958 width=24)
                                  Output:["_col1"]
                                  Filter Operator [FIL_243] (rows=438073092703958 width=24)
                                    predicate:(_col0 <> _col2)
                                    Map Join Operator [MAPJOIN_242] (rows=438073092703958 width=24)
                                      Conds:RS_238.KEY.reducesinkkey0=RS_241.KEY.reducesinkkey0(Inner),Output:["_col0","_col1","_col2"]
                                    <-Map 10 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                      PARTITION_ONLY_SHUFFLE [RS_241]
                                        PartitionCols:_col1
                                        Select Operator [SEL_240] (rows=71977978409 width=15)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_239] (rows=71977978409 width=15)
                                            predicate:(ws_order_number is not null and (ws_order_number BETWEEN DynamicValue(RS_58_ws1_ws_order_number_min) AND DynamicValue(RS_58_ws1_ws_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_58_ws1_ws_order_number_bloom_filter))))
                                            TableScan [TS_15] (rows=71977978409 width=15)
                                              tpcds_orc@web_sales,ws2,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number"]
                                            <-Reducer 2 [BROADCAST_EDGE] vectorized, llap
                                              BROADCAST [RS_235]
                                                Group By Operator [GBY_233] (rows=1 width=24)
                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                    <-Map 6 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                      PARTITION_ONLY_SHUFFLE [RS_238]
                                        PartitionCols:_col1
                                        Select Operator [SEL_237] (rows=71977978409 width=15)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_236] (rows=71977978409 width=15)
                                            predicate:(ws_order_number is not null and (ws_order_number BETWEEN DynamicValue(RS_58_ws1_ws_order_number_min) AND DynamicValue(RS_58_ws1_ws_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_58_ws1_ws_order_number_bloom_filter))))
                                            TableScan [TS_12] (rows=71977978409 width=15)
                                              tpcds_orc@web_sales,ws1,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number"]
                                            <-Reducer 2 [BROADCAST_EDGE] vectorized, llap
                                              BROADCAST [RS_234]
                                                 Please refer to the previous Group By Operator [GBY_233]
                    <-Group By Operator [GBY_279] (rows=7343356 width=8)
                        Output:["_col0"],keys:KEY._col0
                      <-Reducer 13 [SIMPLE_EDGE] vectorized, llap
                        SHUFFLE [RS_278]
                          PartitionCols:_col0
                          Group By Operator [GBY_277] (rows=15769736924099332 width=8)
                            Output:["_col0"],keys:_col1
                            Map Join Operator [MAPJOIN_276] (rows=266387592744483872 width=8)
                              Conds:RS_275.KEY.reducesinkkey0=RS_259.KEY.reducesinkkey0(Inner),Output:["_col1"]
                            <-Map 18 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                              PARTITION_ONLY_SHUFFLE [RS_259]
                                PartitionCols:_col0
                                Select Operator [SEL_258] (rows=7191510606 width=8)
                                  Output:["_col0"]
                                  Filter Operator [FIL_257] (rows=7191510606 width=8)
                                    predicate:(wr_order_number is not null and (wr_order_number BETWEEN DynamicValue(RS_61_ws1_ws_order_number_min) AND DynamicValue(RS_61_ws1_ws_order_number_max) and in_bloom_filter(wr_order_number, DynamicValue(RS_61_ws1_ws_order_number_bloom_filter))))
                                    TableScan [TS_38] (rows=7191510606 width=8)
                                      tpcds_orc@web_returns,web_returns,Tbl:COMPLETE,Col:PARTIAL,Output:["wr_order_number"]
                                    <-Reducer 9 [BROADCAST_EDGE] vectorized, llap
                                      BROADCAST [RS_256]
                                        Group By Operator [GBY_253] (rows=1 width=24)
                                          Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                            <-Reducer 12 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                              PARTITION_ONLY_SHUFFLE [RS_275]
                                PartitionCols:_col0
                                Select Operator [SEL_274] (rows=438073092703958 width=8)
                                  Output:["_col0"]
                                  Filter Operator [FIL_273] (rows=438073092703958 width=24)
                                    predicate:(_col0 <> _col2)
                                    Map Join Operator [MAPJOIN_272] (rows=438073092703958 width=24)
                                      Conds:RS_268.KEY.reducesinkkey0=RS_271.KEY.reducesinkkey0(Inner),Output:["_col0","_col1","_col2"]
                                    <-Map 17 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                      PARTITION_ONLY_SHUFFLE [RS_271]
                                        PartitionCols:_col1
                                        Select Operator [SEL_270] (rows=71977978409 width=15)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_269] (rows=71977978409 width=15)
                                            predicate:(ws_order_number is not null and (ws_order_number BETWEEN DynamicValue(RS_42_web_returns_wr_order_number_min) AND DynamicValue(RS_42_web_returns_wr_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_42_web_returns_wr_order_number_bloom_filter))) and (ws_order_number BETWEEN DynamicValue(RS_61_ws1_ws_order_number_min) AND DynamicValue(RS_61_ws1_ws_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_61_ws1_ws_order_number_bloom_filter))))
                                            TableScan [TS_30] (rows=71977978409 width=15)
                                              tpcds_orc@web_sales,ws2,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number"]
                                            <-Reducer 9 [BROADCAST_EDGE] vectorized, llap
                                              BROADCAST [RS_255]
                                                 Please refer to the previous Group By Operator [GBY_253]
                                            <-Reducer 19 [BROADCAST_EDGE] vectorized, llap
                                              BROADCAST [RS_265]
                                                Group By Operator [GBY_263] (rows=1 width=24)
                                                  Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=14686712)"]
                                    <-Map 11 [CUSTOM_SIMPLE_EDGE] vectorized, llap
                                      PARTITION_ONLY_SHUFFLE [RS_268]
                                        PartitionCols:_col1
                                        Select Operator [SEL_267] (rows=71977978409 width=15)
                                          Output:["_col0","_col1"]
                                          Filter Operator [FIL_266] (rows=71977978409 width=15)
                                            predicate:(ws_order_number is not null and (ws_order_number BETWEEN DynamicValue(RS_42_web_returns_wr_order_number_min) AND DynamicValue(RS_42_web_returns_wr_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_42_web_returns_wr_order_number_bloom_filter))) and (ws_order_number BETWEEN DynamicValue(RS_61_ws1_ws_order_number_min) AND DynamicValue(RS_61_ws1_ws_order_number_max) and in_bloom_filter(ws_order_number, DynamicValue(RS_61_ws1_ws_order_number_bloom_filter))))
                                            TableScan [TS_27] (rows=71977978409 width=15)
                                              tpcds_orc@web_sales,ws1,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_warehouse_sk","ws_order_number"]
                                            <-Reducer 9 [BROADCAST_EDGE] vectorized, llap
                                              BROADCAST [RS_254]
                                                 Please refer to the previous Group By Operator [GBY_253]
                                            <-Reducer 19 [BROADCAST_EDGE] vectorized, llap
                                              BROADCAST [RS_264]
                                                 Please refer to the previous Group By Operator [GBY_263]