Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE), Reducer 6 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 6 <- Map 5 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 3 vectorized, llap
      File Output Operator [FS_104]
        Limit [LIM_103] (rows=100 width=215)
          Number of rows:100
          Select Operator [SEL_102] (rows=470700 width=215)
            Output:["_col0","_col1","_col2","_col3"]
          <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_101]
              Filter Operator [FIL_100] (rows=470700 width=215)
                predicate:CASE WHEN ((_col2 > 0)) THEN ((UDFToDouble(_col3) / UDFToDouble(_col2)) BETWEEN 0.6666666666666666 AND 1.5) ELSE (null) END
                Group By Operator [GBY_99] (rows=941400 width=215)
                  Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(VALUE._col0)","sum(VALUE._col1)"],keys:KEY._col0, KEY._col1
                <-Map 1 [SIMPLE_EDGE] vectorized, llap
                  SHUFFLE [RS_98]
                    PartitionCols:_col0, _col1
                    Group By Operator [GBY_97] (rows=12130715 width=215)
                      Output:["_col0","_col1","_col2","_col3"],aggregations:["sum(_col2)","sum(_col3)"],keys:_col0, _col1
                      Select Operator [SEL_96] (rows=24261431 width=297)
                        Output:["_col0","_col1","_col2","_col3"]
                        Map Join Operator [MAPJOIN_95] (rows=24261431 width=297)
                          Conds:MAPJOIN_94._col1=RS_88._col0(Inner),Output:["_col2","_col5","_col7","_col10"]
                        <-Map 7 [BROADCAST_EDGE] vectorized, llap
                          BROADCAST [RS_88]
                            PartitionCols:_col0
                            Select Operator [SEL_87] (rows=30 width=107)
                              Output:["_col0","_col1"]
                              Filter Operator [FIL_86] (rows=30 width=107)
                                predicate:w_warehouse_sk is not null
                                TableScan [TS_9] (rows=30 width=107)
                                  tpcds_orc@warehouse,warehouse,Tbl:COMPLETE,Col:COMPLETE,Output:["w_warehouse_sk","w_warehouse_name"]
                        <-Map Join Operator [MAPJOIN_94] (rows=24261431 width=206)
                            Conds:MAPJOIN_93._col0=RS_82._col0(Inner),Output:["_col1","_col2","_col5","_col7"]
                          <-Map 5 [BROADCAST_EDGE] vectorized, llap
                            PARTITION_ONLY_SHUFFLE [RS_82]
                              PartitionCols:_col0
                              Select Operator [SEL_81] (rows=55777 width=115)
                                Output:["_col0","_col1"]
                                Filter Operator [FIL_80] (rows=55777 width=115)
                                  predicate:(i_current_price BETWEEN 0.99 AND 1.49 and i_item_sk is not null)
                                  TableScan [TS_6] (rows=502000 width=115)
                                    tpcds_orc@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_item_id","i_current_price"]
                          <-Map Join Operator [MAPJOIN_93] (rows=218355922 width=114)
                              Conds:SEL_92._col3=RS_76._col0(Inner),Output:["_col0","_col1","_col2","_col5"]
                            <-Map 4 [BROADCAST_EDGE] vectorized, llap
                              BROADCAST [RS_76]
                                PartitionCols:_col0
                                Select Operator [SEL_75] (rows=8116 width=102)
                                  Output:["_col0","_col1"]
                                  Filter Operator [FIL_74] (rows=8116 width=102)
                                    predicate:(CAST( d_date AS TIMESTAMP) BETWEEN 1998-03-09 00:00:00.0 AND 1998-05-08 00:00:00.0 and d_date_sk is not null)
                                    TableScan [TS_3] (rows=73049 width=102)
                                      tpcds_orc@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_date"]
                              Dynamic Partitioning Event Operator [EVENT_79] (rows=8116 width=102)
                                Group By Operator [GBY_78] (rows=8116 width=102)
                                  Output:["_col0"],keys:_col0
                                  Select Operator [SEL_77] (rows=8116 width=102)
                                    Output:["_col0"]
                                     Please refer to the previous Select Operator [SEL_75]
                            <-Select Operator [SEL_92] (rows=1965337830 width=27)
                                Output:["_col0","_col1","_col2","_col3"]
                                Filter Operator [FIL_91] (rows=1965337830 width=27)
                                  predicate:(inv_warehouse_sk is not null and inv_item_sk is not null and (inv_item_sk BETWEEN DynamicValue(RS_16_item_i_item_sk_min) AND DynamicValue(RS_16_item_i_item_sk_max) and in_bloom_filter(inv_item_sk, DynamicValue(RS_16_item_i_item_sk_bloom_filter))))
                                  TableScan [TS_0] (rows=1965337830 width=27)
                                    tpcds_orc@inventory,inventory,Tbl:COMPLETE,Col:COMPLETE,Output:["inv_item_sk","inv_warehouse_sk","inv_quantity_on_hand"]
                                  <-Reducer 6 [BROADCAST_EDGE] vectorized, llap
                                    BROADCAST [RS_90]
                                      Group By Operator [GBY_89] (rows=1 width=24)
                                        Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]