Plan optimized by CBO.

Vertex dependency in root stage
Map 3 <- Map 6 (BROADCAST_EDGE), Map 7 (BROADCAST_EDGE), Map 9 (BROADCAST_EDGE), Reducer 10 (BROADCAST_EDGE), Reducer 2 (BROADCAST_EDGE), Reducer 8 (BROADCAST_EDGE)
Reducer 10 <- Map 9 (CUSTOM_SIMPLE_EDGE)
Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)
Reducer 4 <- Map 1 (BROADCAST_EDGE), Map 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 4 (SIMPLE_EDGE)
Reducer 8 <- Map 7 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:-1
    Stage-1
      Reducer 5 vectorized, llap
      File Output Operator [FS_142]
        Select Operator [SEL_141] (rows=33478020 width=368)
          Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
        <-Reducer 4 [SIMPLE_EDGE] vectorized, llap
          SHUFFLE [RS_140]
            Select Operator [SEL_139] (rows=33478020 width=368)
              Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
              Map Join Operator [MAPJOIN_138] (rows=33478020 width=368)
                Conds:RS_118._col0=FIL_137._col1(Inner),Output:["_col1","_col2","_col3","_col4","_col5","_col7"]
              <-Map 1 [BROADCAST_EDGE] vectorized, llap
                BROADCAST [RS_118]
                  PartitionCols:_col0
                  Select Operator [SEL_117] (rows=1000 width=360)
                    Output:["_col0","_col1","_col2","_col3","_col4"]
                    Filter Operator [FIL_116] (rows=1000 width=360)
                      predicate:c_customer_sk is not null
                      TableScan [TS_0] (rows=1000 width=360)
                        tpcds_orc@customer,customer,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_salutation","c_first_name","c_last_name","c_preferred_cust_flag"]
              <-Filter Operator [FIL_137] (rows=23133312 width=24)
                  predicate:_col2 BETWEEN 15 AND 20
                  Select Operator [SEL_136] (rows=208199810 width=24)
                    Output:["_col0","_col1","_col2"]
                    Group By Operator [GBY_135] (rows=208199810 width=24)
                      Output:["_col0","_col1","_col2"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1
                    <-Map 3 [SIMPLE_EDGE] vectorized, llap
                      SHUFFLE [RS_134]
                        PartitionCols:_col0, _col1
                        Group By Operator [GBY_133] (rows=314438650 width=24)
                          Output:["_col0","_col1","_col2"],aggregations:["count()"],keys:_col0, _col3
                          Map Join Operator [MAPJOIN_132] (rows=314438650 width=16)
                            Conds:MAPJOIN_131._col2=RS_112._col0(Inner),Output:["_col0","_col3"]
                          <-Map 9 [BROADCAST_EDGE] vectorized, llap
                            PARTITION_ONLY_SHUFFLE [RS_112]
                              PartitionCols:_col0
                              Select Operator [SEL_111] (rows=71 width=106)
                                Output:["_col0"]
                                Filter Operator [FIL_110] (rows=71 width=106)
                                  predicate:((s_county) IN ('mobile county', 'maverick county', 'huron county', 'kittitas county', 'fairfield county', 'jackson county', 'barrow county', 'pennington county') and s_store_sk is not null)
                                  TableScan [TS_12] (rows=1902 width=106)
                                    tpcds_orc@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:["s_store_sk","s_county"]
                          <-Map Join Operator [MAPJOIN_131] (rows=8414550759 width=24)
                              Conds:MAPJOIN_130._col1=RS_106._col0(Inner),Output:["_col0","_col2","_col3"]
                            <-Map 7 [BROADCAST_EDGE] vectorized, llap
                              PARTITION_ONLY_SHUFFLE [RS_106]
                                PartitionCols:_col0
                                Select Operator [SEL_105] (rows=480 width=108)
                                  Output:["_col0"]
                                  Filter Operator [FIL_104] (rows=480 width=108)
                                    predicate:(((hd_buy_potential = '>10000') or (hd_buy_potential = 'unknown')) and (hd_vehicle_count > 0) and CASE WHEN ((hd_vehicle_count > 0)) THEN (((UDFToDouble(hd_dep_count) / UDFToDouble(hd_vehicle_count)) > 1.2)) ELSE (null) END and hd_demo_sk is not null)
                                    TableScan [TS_9] (rows=7200 width=108)
                                      tpcds_orc@household_demographics,household_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["hd_demo_sk","hd_buy_potential","hd_dep_count","hd_vehicle_count"]
                            <-Map Join Operator [MAPJOIN_130] (rows=126218254799 width=32)
                                Conds:SEL_129._col4=RS_100._col0(Inner),Output:["_col0","_col1","_col2","_col3"]
                              <-Map 6 [BROADCAST_EDGE] vectorized, llap
                                BROADCAST [RS_100]
                                  PartitionCols:_col0
                                  Select Operator [SEL_99] (rows=869 width=16)
                                    Output:["_col0"]
                                    Filter Operator [FIL_98] (rows=869 width=16)
                                      predicate:((d_year) IN (2000, 2001, 2002) and (d_dom BETWEEN 1 AND 3 or d_dom BETWEEN 25 AND 28) and d_date_sk is not null)
                                      TableScan [TS_6] (rows=73049 width=16)
                                        tpcds_orc@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_dom"]
                                Dynamic Partitioning Event Operator [EVENT_103] (rows=434 width=16)
                                  Group By Operator [GBY_102] (rows=434 width=16)
                                    Output:["_col0"],keys:_col0
                                    Select Operator [SEL_101] (rows=869 width=16)
                                      Output:["_col0"]
                                       Please refer to the previous Select Operator [SEL_99]
                              <-Select Operator [SEL_129] (rows=265221757409 width=39)
                                  Output:["_col0","_col1","_col2","_col3","_col4"]
                                  Filter Operator [FIL_128] (rows=265221757409 width=39)
                                    predicate:(ss_store_sk is not null and ss_hdemo_sk is not null and ss_customer_sk is not null and (ss_hdemo_sk BETWEEN DynamicValue(RS_19_household_demographics_hd_demo_sk_min) AND DynamicValue(RS_19_household_demographics_hd_demo_sk_max) and in_bloom_filter(ss_hdemo_sk, DynamicValue(RS_19_household_demographics_hd_demo_sk_bloom_filter))) and (ss_store_sk BETWEEN DynamicValue(RS_22_store_s_store_sk_min) AND DynamicValue(RS_22_store_s_store_sk_max) and in_bloom_filter(ss_store_sk, DynamicValue(RS_22_store_s_store_sk_bloom_filter))) and (ss_customer_sk BETWEEN DynamicValue(RS_31_customer_c_customer_sk_min) AND DynamicValue(RS_31_customer_c_customer_sk_max) and in_bloom_filter(ss_customer_sk, DynamicValue(RS_31_customer_c_customer_sk_bloom_filter))))
                                    TableScan [TS_3] (rows=275035746821 width=39)
                                      tpcds_orc@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_customer_sk","ss_hdemo_sk","ss_store_sk","ss_ticket_number"]
                                    <-Reducer 10 [BROADCAST_EDGE] vectorized, llap
                                      BROADCAST [RS_127]
                                        Group By Operator [GBY_126] (rows=1 width=24)
                                          Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                    <-Reducer 2 [BROADCAST_EDGE] vectorized, llap
                                      BROADCAST [RS_123]
                                        Group By Operator [GBY_122] (rows=1 width=24)
                                          Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]
                                    <-Reducer 8 [BROADCAST_EDGE] vectorized, llap
                                      BROADCAST [RS_125]
                                        Group By Operator [GBY_124] (rows=1 width=24)
                                          Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]