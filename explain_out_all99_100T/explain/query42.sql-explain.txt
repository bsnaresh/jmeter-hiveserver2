Plan optimized by CBO.

Vertex dependency in root stage
Map 1 <- Map 4 (BROADCAST_EDGE), Map 5 (BROADCAST_EDGE), Reducer 6 (BROADCAST_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE)
Reducer 3 <- Reducer 2 (SIMPLE_EDGE)
Reducer 6 <- Map 5 (CUSTOM_SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 3 vectorized, llap
      File Output Operator [FS_75]
        Limit [LIM_74] (rows=1 width=20)
          Number of rows:100
          Select Operator [SEL_73] (rows=1 width=20)
            Output:["_col0","_col1","_col2","_col3"]
          <-Reducer 2 [SIMPLE_EDGE] vectorized, llap
            SHUFFLE [RS_72]
              Select Operator [SEL_71] (rows=1 width=106)
                Output:["_col1","_col2","_col3"]
                Group By Operator [GBY_70] (rows=1 width=102)
                  Output:["_col0","_col1","_col2"],aggregations:["sum(VALUE._col0)"],keys:KEY._col0, KEY._col1
                <-Map 1 [SIMPLE_EDGE] vectorized, llap
                  SHUFFLE [RS_69]
                    PartitionCols:_col0, _col1
                    Group By Operator [GBY_68] (rows=2268 width=102)
                      Output:["_col0","_col1","_col2"],aggregations:["sum(_col1)"],keys:_col7, _col8
                      Select Operator [SEL_67] (rows=1491806945 width=102)
                        Output:["_col7","_col8","_col1"]
                        Map Join Operator [MAPJOIN_66] (rows=1491806945 width=102)
                          Conds:MAPJOIN_65._col0=RS_57._col0(Inner),Output:["_col1","_col7","_col8"]
                        <-Map 5 [BROADCAST_EDGE] vectorized, llap
                          PARTITION_ONLY_SHUFFLE [RS_57]
                            PartitionCols:_col0
                            Select Operator [SEL_56] (rows=7968 width=105)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_55] (rows=7968 width=105)
                                predicate:((i_manager_id = 1) and i_item_sk is not null)
                                TableScan [TS_6] (rows=502000 width=105)
                                  tpcds_orc@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:["i_item_sk","i_category_id","i_category","i_manager_id"]
                        <-Map Join Operator [MAPJOIN_65] (rows=93986831989 width=16)
                            Conds:SEL_64._col2=RS_51._col0(Inner),Output:["_col0","_col1"]
                          <-Map 4 [BROADCAST_EDGE] vectorized, llap
                            BROADCAST [RS_51]
                              PartitionCols:_col0
                              Select Operator [SEL_50] (rows=624 width=16)
                                Output:["_col0"]
                                Filter Operator [FIL_49] (rows=624 width=16)
                                  predicate:((d_moy = 12) and (d_year = 1998) and d_date_sk is not null)
                                  TableScan [TS_3] (rows=73049 width=16)
                                    tpcds_orc@date_dim,dt,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                            Dynamic Partitioning Event Operator [EVENT_54] (rows=312 width=16)
                              Group By Operator [GBY_53] (rows=312 width=16)
                                Output:["_col0"],keys:_col0
                                Select Operator [SEL_52] (rows=624 width=16)
                                  Output:["_col0"]
                                   Please refer to the previous Select Operator [SEL_50]
                          <-Select Operator [SEL_64] (rows=275035746821 width=23)
                              Output:["_col0","_col1","_col2"]
                              Filter Operator [FIL_63] (rows=275035746821 width=23)
                                predicate:(ss_item_sk is not null and (ss_item_sk BETWEEN DynamicValue(RS_13_item_i_item_sk_min) AND DynamicValue(RS_13_item_i_item_sk_max) and in_bloom_filter(ss_item_sk, DynamicValue(RS_13_item_i_item_sk_bloom_filter))))
                                TableScan [TS_0] (rows=275035746821 width=23)
                                  tpcds_orc@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_item_sk","ss_ext_sales_price"]
                                <-Reducer 6 [BROADCAST_EDGE] vectorized, llap
                                  BROADCAST [RS_62]
                                    Group By Operator [GBY_61] (rows=1 width=24)
                                      Output:["_col0","_col1","_col2"],aggregations:["min(VALUE._col0)","max(VALUE._col1)","bloom_filter(VALUE._col2, expectedEntries=1000000)"]